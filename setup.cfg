# -*- coding: utf-8 -*-
#
# Copyright (C) 2019-2023 CERN.
#
# CDS-ILS is free software; you can redistribute it and/or modify it under
# the terms of the MIT License; see LICENSE file for more details.

[metadata]
name = cds-ils
version = attr: cds_ils.__version__
description = CDS-ILS.
long_description = file: README.rst, CHANGES.rst
keywords = CDS-ILS InvenioILS Invenio
license = MIT
author = CERN
author_email =
platforms = any
url = https://github.com/CERNDocumentServer/cds-ils
classifiers =
    Development Status :: 3 - Alpha

[options]
include_package_data = True
packages = find:
python_requires = >=3.6
zip_safe = False
install_requires =
    Flask-BabelEx>=0.9.3
    fuzzywuzzy>=0.18.0
    python-ldap>=3.4.0,<3.5.0
    invenio-app-ils[lorem,elasticsearch7,postgresql]==1.0.0rc3
    # Version 1.4.12 drops support for python 3.6
    invenio-accounts>=1.4.8,<1.4.12
    # Version 1.4.3 drops support for python 3.6
    invenio-access>=1.4.0,<1.4.3
    # Version 1.6.2 bumps jsonschema, which has issues
    invenio-records>=1.6.0,<1.6.2
    sentry-sdk>=0.10.2
    # migrator deps
    cds-dojson==0.9.0
    lxml>=4.6.5
    # unsupported ES version issue
    elasticsearch>=6.0.0,<7.14
    # Version 2.1.0 of Flask requires celery>=5.2.0 and this drops support for python 3.6
    Flask<2.1.0
    # Version 2.1.0 of Werkzeug drops support for python 3.6
    Werkzeug<2.1.0
    # Version 3.1.0 of jinja2 drops support for python 3.6
    jinja2<3.1.0
    # jsonref 1.0.0/jsonresolver 0.3.2 drops support for python 3.6
    jsonref<1.0.0
    # To be removed once we use inveniosoftware/flask-security, reason: https://github.com/inveniosoftware/flask-security-fork/commit/c984637be05bcf554436e4b3cdfdfe6a0699612d
    Flask-WTF<1.1.0
    jsonresolver<0.3.2


[options.extras_require]
tests =
    mock>=2.0.0
    pydocstyle<6.2.0
    pytest-black>=0.3.0
    pytest-invenio>=1.4.2,<2.0.0
    pytest-mock>=1.6.0
    docker-services-cli>=0.6.1
    # necessary for pytest-black for python 3.6
    setuptools-scm<7.0.0

[options.entry_points]
console_scripts =
    cds-ils = invenio_app.cli:cli
flask.commands =
    user-testing = cds_ils.cli:user_testing
    ldap-users = cds_ils.ldap.cli:ldap_users
    migration = cds_ils.migrator.cli:migration
    importer = cds_ils.importer.cli:importer
    fixtures = cds_ils.cli:fixtures
    covers = cds_ils.cli:covers
    maintenance = cds_ils.cli:maintenance
invenio_db.models =
    cds_ils_ldap = cds_ils.ldap.models
    cds_ils_importer = cds_ils.importer.models
invenio_admin.views =
    cds_ils_ldap_sync = cds_ils.ldap.admin:ldap_sync
    cds_ils_importer_tasks = cds_ils.importer.admin:importer_tasks
    cds_ils_records = cds_ils.importer.admin:importer_records
invenio_base.api_apps =
    cds_ils = cds_ils.ext:CdsIls
invenio_base.apps =
    cds_ils_app = cds_ils.ext:CdsIls
invenio_base.blueprints =
    cds_ils_admin = cds_ils.ldap.admin:blueprint
invenio_base.api_blueprints =
    cds_ils_patron_loans = cds_ils.patrons.views:create_patron_loans_blueprint
    cds_ils_legacy = cds_ils.literature.views:legacy_blueprint
    cds_ils_logout = cds_ils.authentication.views:cern_oauth_blueprint
    cds_ils_importer = cds_ils.importer.views:create_importer_blueprint
invenio_config.module =
    cds_ils = cds_ils.config
invenio_celery.tasks =
    cds_ils_tasks = cds_ils.literature.tasks
    cds_ils_ldap_tasks = cds_ils.ldap.tasks
    cds_ils_mail_tasks = cds_ils.mail.tasks
    cds_ils_importer_tasks = cds_ils.importer.tasks
invenio_access.actions =
    retrieve_patron_loans_access_action = cds_ils.patrons.permissions:retrieve_patron_loans_access_action
    document_importer_access_action = cds_ils.patrons.permissions:document_importer_access_action
cds_ils.importers =
    cds = cds_ils.importer.providers.cds.importer:CDSImporter
    springer = cds_ils.importer.providers.springer.importer:SpringerImporter
    ebl = cds_ils.importer.providers.ebl.importer:EBLImporter
    safari = cds_ils.importer.providers.safari.importer:SafariImporter
cds_ils.document_importers =
    cds = cds_ils.importer.providers.cds.document_importer:CDSDocumentImporter
cds_ils.importer.base =
    base = cds_ils.importer.providers.rules.base
cds_ils.importer.models =
    cds_book = cds_ils.importer.providers.cds.models.document:model
    cds_standard = cds_ils.importer.providers.cds.models.standard:model
    springer_document = cds_ils.importer.providers.springer.springer:model
    ebl_document = cds_ils.importer.providers.ebl.ebl:model
    safari_document = cds_ils.importer.providers.safari.safari:model
cds_ils.migrator.models =
    cds_book = cds_ils.importer.providers.cds.models.document:model
    cds_standard = cds_ils.importer.providers.cds.models.standard:model
cds_ils.migrator.serial_model =
    ils_serial = cds_ils.importer.providers.cds.models.serial:model
cds_ils.migrator.journal_model =
    ils_journal = cds_ils.importer.providers.cds.models.journal:model
cds_ils.migrator.multipart_model =
    ils_multipart = cds_ils.importer.providers.cds.models.multipart:model
cds_ils.importer.cds.base =
    base = cds_ils.importer.providers.cds.rules.base
cds_ils.importer.cds.document =
    base = cds_ils.importer.providers.cds.rules.base
    standard = cds_ils.importer.providers.cds.rules.standard
cds_ils.importer.document =
    cds = cds_ils.importer.providers.cds.rules.base
    springer = cds_ils.importer.providers.springer.rules.document
    ebl = cds_ils.importer.providers.ebl.rules.document
    safari = cds_ils.importer.providers.safari.rules.document
cds_ils.importer.series =
    serial = cds_ils.importer.providers.cds.rules.serial
    multipart = cds_ils.importer.providers.cds.rules.multipart
    journal = cds_ils.importer.providers.cds.rules.journal
cds_ils.migrator.base =
    base = cds_ils.importer.providers.cds.rules.base
invenio_pidstore.minters =
    legacy = cds_ils.minters:legacy_recid_minter

[bdist_wheel]
universal = 1

[pydocstyle]
add_ignore = D401

[isort]
profile=black

[check-manifest]
ignore =
    *-requirements.txt

[tool:pytest]
addopts = --black --isort --pydocstyle --cov=cds_ils --cov-report=term-missing
testpaths = tests cds_ils
